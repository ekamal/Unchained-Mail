<?php

namespace EK\MailBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * GlobalTest
 *
 * @ORM\Table(name="global_test")
 * @ORM\Entity(repositoryClass="EK\MailBundle\Repository\GlobalTestRepository")
 */
class GlobalTest
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nomTestGlobal", type="string", length=255)
     */
    private $nomTestGlobal;

    /**
     * @var string
     *
     * @ORM\Column(name="emails", type="text")
     */
    private $emails;

    /**
     * @var string
     *
     * @ORM\Column(name="header", type="text")
     */
    private $header;

    /**
     * @var string
     *
     * @ORM\Column(name="html", type="text")
     */
    private $html;

    /**
     * @var int
     *
     * @ORM\Column(name="waiting", type="integer")
     */
    private $waiting;

    /**
     * @var int
     *
     * @ORM\Column(name="encoding", type="integer")
     */
    private $encoding;

    /**
     * @var int
     *
     * @ORM\Column(name="typeContent", type="integer")
     */
    private $typeContent;

    /**
     * @var int
     *
     * @ORM\Column(name="charset", type="integer")
     */
    private $charset;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="date", type="date")
     */
    private $date;

    /**
     * @ORM\ManyToMany(targetEntity="Ip", cascade={"persist"})
     */
    private $ips;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nomTestGlobal
     *
     * @param string $nomTestGlobal
     *
     * @return GlobalTest
     */
    public function setNomTestGlobal($nomTestGlobal)
    {
        $this->nomTestGlobal = $nomTestGlobal;

        return $this;
    }

    /**
     * Get nomTestGlobal
     *
     * @return string
     */
    public function getNomTestGlobal()
    {
        return $this->nomTestGlobal;
    }

    /**
     * Set emails
     *
     * @param string $emails
     *
     * @return GlobalTest
     */
    public function setEmails($emails)
    {
        $this->emails = $emails;

        return $this;
    }

    /**
     * Get emails
     *
     * @return string
     */
    public function getEmails()
    {
        return $this->emails;
    }

    /**
     * Set header
     *
     * @param string $header
     *
     * @return GlobalTest
     */
    public function setHeader($header)
    {
        $this->header = $header;

        return $this;
    }

    /**
     * Get header
     *
     * @return string
     */
    public function getHeader()
    {
        return $this->header;
    }

    /**
     * Set html
     *
     * @param string $html
     *
     * @return GlobalTest
     */
    public function setHtml($html)
    {
        $this->html = $html;

        return $this;
    }

    /**
     * Get html
     *
     * @return string
     */
    public function getHtml()
    {
        return $this->html;
    }

    /**
     * Set waiting
     *
     * @param integer $waiting
     *
     * @return GlobalTest
     */
    public function setWaiting($waiting)
    {
        $this->waiting = $waiting;

        return $this;
    }

    /**
     * Get waiting
     *
     * @return int
     */
    public function getWaiting()
    {
        return $this->waiting;
    }

    /**
     * Set encoding
     *
     * @param integer $encoding
     *
     * @return GlobalTest
     */
    public function setEncoding($encoding)
    {
        $this->encoding = $encoding;

        return $this;
    }

    /**
     * Get encoding
     *
     * @return int
     */
    public function getEncoding()
    {
        return $this->encoding;
    }

    /**
     * Set typeContent
     *
     * @param integer $typeContent
     *
     * @return GlobalTest
     */
    public function setTypeContent($typeContent)
    {
        $this->typeContent = $typeContent;

        return $this;
    }

    /**
     * Get typeContent
     *
     * @return int
     */
    public function getTypeContent()
    {
        return $this->typeContent;
    }

    /**
     * Set charset
     *
     * @param integer $charset
     *
     * @return GlobalTest
     */
    public function setCharset($charset)
    {
        $this->charset = $charset;

        return $this;
    }

    /**
     * Get charset
     *
     * @return int
     */
    public function getCharset()
    {
        return $this->charset;
    }

    /**
     * Set date
     *
     * @param \DateTime $date
     *
     * @return GlobalTest
     */
    public function setDate($date)
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Get date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->date;
    }
}

